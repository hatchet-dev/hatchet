name: build
on:
  pull_request:

jobs:
  check_path:
    runs-on: ubuntu-latest
    outputs:
      sdk_only: ${{ steps.filter.outputs.sdk_only }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if only SDK files changed
        id: check-paths
        uses: ./.github/actions/check-paths
        with:
          include_patterns: |
            ^sdks/
          result_name: sdk_only

  frontend:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build frontend
        run: docker build -f ./build/package/frontend.dockerfile .

  api:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=api

  api-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=api

  engine:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=engine

  engine-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=engine

  admin:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=admin

  admin-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build servers
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=admin

  migrate:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build migrate
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=migrate

  migrate-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build migrate
        run: docker build -f ./build/package/servers.dockerfile . --build-arg SERVER_TARGET=migrate

  lite-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build lite
        run: |
          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=lite \
            --platform linux/arm64 \
            -t hatchet-lite-tmp:arm64 \
            . &

          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=admin \
            --platform linux/arm64 \
            -t hatchet-admin-tmp:arm64 \
            . &

          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=migrate \
            --platform linux/arm64 \
            -t hatchet-migrate-tmp:arm64 \
            . &

          wait

          DOCKER_BUILDKIT=1 docker build -f ./build/package/lite.dockerfile \
            --build-arg HATCHET_LITE_IMAGE=hatchet-lite-tmp:arm64 \
            --build-arg HATCHET_ADMIN_IMAGE=hatchet-admin-tmp:arm64 \
            --build-arg HATCHET_MIGRATE_IMAGE=hatchet-migrate-tmp:arm64 \
            --platform linux/arm64 \
            .

  lite-amd:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build lite
        run: |
          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=lite \
            --platform linux/amd64 \
            -t hatchet-lite-tmp:amd64 \
            . &

          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=admin \
            --platform linux/amd64 \
            -t hatchet-admin-tmp:amd64 \
            . &

          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=migrate \
            --platform linux/amd64 \
            -t hatchet-migrate-tmp:amd64 \
            . &

          wait

          DOCKER_BUILDKIT=1 docker build -f ./build/package/lite.dockerfile \
            --build-arg HATCHET_LITE_IMAGE=hatchet-lite-tmp:amd64 \
            --build-arg HATCHET_ADMIN_IMAGE=hatchet-admin-tmp:amd64 \
            --build-arg HATCHET_MIGRATE_IMAGE=hatchet-migrate-tmp:amd64 \
            --platform linux/amd64 \
            .

  dashboard-arm:
    needs: check_path
    runs-on: hatchet-arm64-2
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build dashboard
        run: |
          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=api \
            --platform linux/arm64 \
            -t hatchet-api-tmp:arm64 \
            .

          DOCKER_BUILDKIT=1 docker build -f ./build/package/dashboard.dockerfile \
            --build-arg HATCHET_API_IMAGE=hatchet-api-tmp:arm64 \
            --platform linux/arm64 \
            .

  dashboard-amd:
    needs: check_path
    runs-on: ubuntu-latest
    if: ${{ needs.check_path.outputs.sdk_only != 'true' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Build dashboard
        run: |
          DOCKER_BUILDKIT=1 docker build -f ./build/package/servers.dockerfile \
            --build-arg SERVER_TARGET=api \
            --platform linux/amd64 \
            -t hatchet-api-tmp:amd64 \
            .

          DOCKER_BUILDKIT=1 docker build -f ./build/package/dashboard.dockerfile \
            --build-arg HATCHET_API_IMAGE=hatchet-api-tmp:amd64 \
            --platform linux/amd64 \
            .
