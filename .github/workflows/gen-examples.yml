name: generate examples

on:
  push:
    branches: [ main, mk/generated-code-cleanup ]

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Generate
      working-directory: frontend/snips
      run: pnpm i && pnpm generate && pnpm run copy:examples

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Create branch and commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        BRANCH_NAME="regenerate-examples-${{ github.sha }}"
        git checkout -b "$BRANCH_NAME"
        git add .
        git commit -m "chore: regenerate examples"
        git push origin "$BRANCH_NAME"
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
      id: create-branch

    - name: Create Pull Request
      if: steps.verify-changed-files.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr create \
          --title "chore: regenerate examples" \
          --body "Automated regeneration of examples from the main branch." \
          --head "${{ steps.create-branch.outputs.branch_name }}" \
          --base main
        echo "pr_number=$(gh pr list --head ${{ steps.create-branch.outputs.branch_name }} --json number --jq '.[0].number')" >> $GITHUB_OUTPUT
      id: create-pr

    - name: Auto-merge Pull Request
      if: steps.verify-changed-files.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr merge "${{ steps.create-branch.outputs.branch_name }}" --auto --squash
