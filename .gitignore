.DS_Store
.env
*.env
docker/.env
*.pem
app
!frontend/app
*.db
test.yaml
dist
gon.hcl
internal/local_templates
gon*.hcl
*prod.Dockerfile
staging.sh
*.crt
*.key
bin
.idea
dump.rdb
.srl
*.srl
*.csr
*.pfx
*.cert
.next
.venv

node_modules

# Jetbrains IDEs
*.iml

# Local docs directories
/docs/.obsidian

# Local .terraform directories
**/.terraform/*

.terraform

.terraform.lock.hcl

*kubeconfig*
!*kubeconfig*.go

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log


.venv
# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
#
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc


# Ignore editor files
.vscode

tmp

postgres-data
rabbitmq.conf

*encryption-keys