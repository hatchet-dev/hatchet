=begin
#Hatchet API

#The Hatchet API

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

require 'cgi'

module HatchetSdkRest
  class GithubApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Github app tenant webhook
    # SNS event
    # @param tenant [String] The tenant id
    # @param event [String] The event key
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def sns_update(tenant, event, opts = {})
      sns_update_with_http_info(tenant, event, opts)
      nil
    end

    # Github app tenant webhook
    # SNS event
    # @param tenant [String] The tenant id
    # @param event [String] The event key
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def sns_update_with_http_info(tenant, event, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: GithubApi.sns_update ...'
      end
      # verify the required parameter 'tenant' is set
      if @api_client.config.client_side_validation && tenant.nil?
        fail ArgumentError, "Missing the required parameter 'tenant' when calling GithubApi.sns_update"
      end
      if @api_client.config.client_side_validation && tenant.to_s.length > 36
        fail ArgumentError, 'invalid value for "tenant" when calling GithubApi.sns_update, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && tenant.to_s.length < 36
        fail ArgumentError, 'invalid value for "tenant" when calling GithubApi.sns_update, the character length must be greater than or equal to 36.'
      end

      # verify the required parameter 'event' is set
      if @api_client.config.client_side_validation && event.nil?
        fail ArgumentError, "Missing the required parameter 'event' when calling GithubApi.sns_update"
      end
      if @api_client.config.client_side_validation && event.to_s.length > 255
        fail ArgumentError, 'invalid value for "event" when calling GithubApi.sns_update, the character length must be smaller than or equal to 255.'
      end

      if @api_client.config.client_side_validation && event.to_s.length < 1
        fail ArgumentError, 'invalid value for "event" when calling GithubApi.sns_update, the character length must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/api/v1/sns/{tenant}/{event}'.sub('{' + 'tenant' + '}', CGI.escape(tenant.to_s)).sub('{' + 'event' + '}', CGI.escape(event.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"GithubApi.sns_update",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GithubApi#sns_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
